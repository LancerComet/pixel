{"version":3,"file":"pixel.js","sources":["../../src/process.js","../../src/utils.js","../../src/filter.js","../../src/canvas.js","../../src/const.js","../../src/main.js"],"sourcesContent":["function getAsyncProcessingPromise(processing, N) {\n  N = N || 100 * 500 * 4;\n  return function asyncProcessing(imageData) {\n    var $rest = Array.prototype.slice.call(arguments, 1);\n    return new Promise((resolve, reject) => {\n      function doProcess(pos, len) {\n        for(let i = 0; i < len; i += 4) {\n          processing(imageData, pos + i, $rest);\n        }\n        setTimeout(() => {\n          pos += len;\n          if (pos + N < imageData.length) {\n            doProcess(pos, N);\n          } else if (pos < imageData.length) {\n            doProcess(pos, imageData.length - pos);\n          } else {\n            resolve(imageData);\n          }\n        }, 0);\n      }\n      doProcess(0, N);\n    });\n  };\n}\n\n/**\n * Complement\n * r' = 255 - r\n * g' = 255 - g\n * b' = 255 - b\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport let Complement = getAsyncProcessingPromise(function asyncProcessingComplement(imageData, pos) {\n  imageData[pos] = 255 - imageData[pos];\n  imageData[pos + 1] = 255 - imageData[pos + 1];\n  imageData[pos + 2] = 255 - imageData[pos + 2];\n});\n\n/**\n * Linear\n * r' = r * x + y\n * g' = g * x + y\n * b' = b * x + y\n * a' = a\n * @param {TypedArray} imageData\n * @param {Number} x\n * @param {Number} y\n * @return Promise\n */\nexport let Linear = getAsyncProcessingPromise(function asyncProcessingLinear(imageData, pos, $rest) {\n  imageData[pos] = $rest[0] * imageData[pos] + $rest[1];\n  imageData[pos + 1] = $rest[0] * imageData[pos + 1] + $rest[1];\n  imageData[pos + 2] = $rest[0] * imageData[pos + 2] + $rest[1];\n});\n\n/**\n * Opacity\n * r' = r\n * g' = g\n * b' = b\n * a' = opacity * 255\n * @param {TypedArray} imageData\n * @param {Number} opacity: 0 ~ 1\n * @return Promise\n */\nexport let Opacity = getAsyncProcessingPromise(function asyncProcessingOpacity(imageData, pos, $rest) {\n  imageData[pos + 3] = 255 * $rest[0];\n});\n\n/**\n * Binarization\n * c' = c < threshold ? 0 : 255\n * a' = a\n * @param {TypedArray} imageData\n * @param {Number} threshold\n * @return Promise\n */\nexport let Binarization = getAsyncProcessingPromise(function asyncProcessingBinarization(imageData, pos, $rest) {\n  var gray = 0.299 * imageData[pos] + 0.587 * imageData[pos + 1] + 0.114 * imageData[pos + 2];\n  imageData[pos] = imageData[pos + 1] = imageData[pos + 2] = gray < $rest[0] ? 0 : 255;\n});\n\n/**\n * Gray\n * r' = g' = b' = 0.299 * r + 0.587 * g + 0.114 * b\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport let Gray = getAsyncProcessingPromise(function asyncProcessingGray(imageData, pos) {\n  var gray = 0.299 * imageData[pos] + 0.587 * imageData[pos + 1] + 0.114 * imageData[pos + 2];\n  imageData[pos] = imageData[pos + 1] = imageData[pos + 2] = gray;\n});\n\n/**\n * Gray\n * r' = g' = b' = ( r + g + b ) / 3\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport let Gray2 = getAsyncProcessingPromise(function asyncProcessingGray(imageData, pos) {\n  var gray = (imageData[pos] + imageData[pos + 1] + imageData[pos + 2]) / 3;\n  imageData[pos] = imageData[pos + 1] = imageData[pos + 2] = gray;\n});\n","/**\n * 卷积运算\n * @param matrix 矩阵\n * @param template 模板\n * @return result 返回矩阵和模板卷积运算的结果\n */\nexport function Convolution(matrix, template) {\n    var result = 0;\n    for (var i = 0; i < matrix.length; ++i) {\n      result += matrix[i] * template[i];\n    }\n    return result;\n}\n\n/// 辅助函数\n/**\n * 升序函数，用于数组排序\n */\nexport function AscendingOrder(a, b) {\n  return a - b;\n}\n/**\n * 降序函数，用于数组排序\n */\nexport function DescendingOrder(a, b) {\n  return b - a;\n}\n","import {\n  Convolution,\n  AscendingOrder\n} from './utils';\n\n// 卷积运算的问题：边界的像素没有相邻像素，无法构成矩阵\n// 解决：补充像素\n// 1. 用0填充\n// 2. 用第一行／列和最后一行／列补充\n// 3. 反射边界填充：column[-1] = column[1]\n// 4. 图像拼接填充：column[-1] = column[width-1]\n//\n// 这里采用第二种策略\n// 以某个像素点为中心，获取其周边像素组成一个3 x 3矩阵\nfunction get3x3Matrix(originData, i, j, w, h) {\n  var topLeft = (i - 1) * w + j - 4, top = (i - 1) * w + j, topRight = (i - 1) * w + j + 4,\n    left = i * w + j - 4, center = i * w + j, right = i * w + j + 4,\n    bottomLeft = (i + 1) * w + j - 4, bottom = (i + 1) * w + j, bottomRight = (i + 1) * w + j + 4;\n  let points = [\n    i === 0 ? (j === 0 ? center : left) : (j === 0 ? top : topLeft),\n    i === 0 ? center : top,\n    i === 0 ? (j === w - 4 ? center : right) : (j === w - 4 ? top : topRight),\n    j === 0 ? center : left,\n    center,\n    j === w - 4 ? center : right,\n    i === h - 1 ? (j === 0 ? center : left) : (j === 0 ? bottom : bottomLeft),\n    i === h - 1 ? center : bottom,\n    i === h - 1 ? (j === w - 4 ? center : right) : (j === w - 4 ? bottom : bottomRight)\n  ];\n  let dataR = [\n    originData[points[0]], originData[points[1]], originData[points[2]],\n    originData[points[3]], originData[points[4]], originData[points[5]],\n    originData[points[6]], originData[points[7]], originData[points[8]]\n  ];\n  let dataG = [\n    originData[points[0] + 1], originData[points[1] + 1], originData[points[2] + 1],\n    originData[points[3] + 1], originData[points[4] + 1], originData[points[5] + 1],\n    originData[points[6] + 1], originData[points[7] + 1], originData[points[8] + 1]\n  ];\n  let dataB = [\n    originData[points[0] + 2], originData[points[1] + 2], originData[points[2] + 2],\n    originData[points[3] + 2], originData[points[4] + 2], originData[points[5] + 2],\n    originData[points[6] + 2], originData[points[7] + 2], originData[points[8] + 2]\n  ];\n  return [dataR, dataG, dataB];\n}\n\n// 十字窗口取相邻像素的规则不是3x3，需要特殊处理\nfunction getCrossWindowMatrix(originData, i, j, w, h) {\n  let top2 = (i - 2) * w + j, top1 = (i - 1) * w + j,\n    right1 = i * w + j + 4, right2 = i * w + j + 8,\n    bottom1 = (i + 1) * w + j, bottom2 = (i + 2) * w + j,\n    left2 = i * w + j - 8, left1 = i * w + j - 4,\n    center = i * w + j;\n  let points = [\n    i < 2 ? center : top2,\n    i < 1 ? center : top1,\n    j > w - 8 ? center : right1,\n    j > w - 12 ? center : right2,\n    i > h - 2 ? center : bottom1,\n    i > h - 3 ? center : bottom2,\n    j < 1 ? center : left1,\n    j < 2 ? center : left2\n  ];\n  let dataR = [\n    originData[points[0]], originData[points[1]], originData[points[2]],\n    originData[points[3]], originData[points[4]], originData[points[5]],\n    originData[points[6]], originData[points[7]], originData[points[8]]\n  ];\n  let dataG = [\n    originData[points[0] + 1], originData[points[1] + 1], originData[points[2] + 1],\n    originData[points[3] + 1], originData[points[4] + 1], originData[points[5] + 1],\n    originData[points[6] + 1], originData[points[7] + 1], originData[points[8] + 1]\n  ];\n  let dataB = [\n    originData[points[0] + 2], originData[points[1] + 2], originData[points[2] + 2],\n    originData[points[3] + 2], originData[points[4] + 2], originData[points[5] + 2],\n    originData[points[6] + 2], originData[points[7] + 2], originData[points[8] + 2]\n  ];\n  return [dataR, dataG, dataB];\n}\n\n/**\n * Smooth Filter\n * @param {TypedArray} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function SmoothFilter(imageData, srcw, srch, template, times) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          imageData[(irow + i) * rowPixelLength + j] = Convolution(matrix3x3[0], template) / times;\n          imageData[(irow + i) * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template) / times;\n          imageData[(irow + i) * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template) / times;\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n  });\n}\n\n/**\n * Median Filter : Cross Window\n * @param {TypedArray} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function CrossWindow(imageData, srcw, srch) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = getCrossWindowMatrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          dataR.sort(AscendingOrder);\n          dataG.sort(AscendingOrder);\n          dataB.sort(AscendingOrder);\n          imageData[(irow + i) * rowPixelLength + j] = dataR[4];\n          imageData[(irow + i) * rowPixelLength + j + 1] = dataG[4];\n          imageData[(irow + i) * rowPixelLength + j + 2] = dataB[4];\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n  });\n}\n\n/**\n * Median Filter : Square Window\n * @param {Array} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function SquareWindow(imageData, srcw, srch) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          dataR.sort(AscendingOrder);\n          dataG.sort(AscendingOrder);\n          dataB.sort(AscendingOrder);\n          imageData[(irow + i) * rowPixelLength + j] = dataR[4];\n          imageData[(irow + i) * rowPixelLength + j + 1] = dataG[4];\n          imageData[(irow + i) * rowPixelLength + j + 2] = dataB[4];\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n  });\n}\n\n/**\n * High Pass Filter\n * @param {Array} imageData\n * @param {Number} srcw\n * @param {Number} srch\n * @param {Array} template\n */\nexport function HighPassFilter(imageData, srcw, srch, template) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          imageData[(irow + i) * rowPixelLength + j] = Convolution(matrix3x3[0], template);\n          imageData[(irow + i) * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template);\n          imageData[(irow + i) * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template);\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n  });\n}\n\n/**\n * Sharpen Filter\n */\nexport function SharpenFilter(imageData, srcw, srch, templateX, templateY) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          var RTempX = Convolution(dataR, templateX);\n          var RTempY = Convolution(dataR, templateY);\n          imageData[(irow + i) * rowPixelLength + j] = Math.sqrt(Math.pow(RTempX, 2) + Math.pow(RTempY, 2));\n          var GTempX = Convolution(dataG, templateX);\n          var GTempY = Convolution(dataG, templateY);\n          imageData[(irow + i) * rowPixelLength + j + 1] = Math.sqrt(Math.pow(GTempX, 2) + Math.pow(GTempY, 2));\n          var BTempX = Convolution(dataB, templateX);\n          var BTempY = Convolution(dataB, templateY);\n          imageData[(irow + i) * rowPixelLength + j + 2] = Math.sqrt(Math.pow(BTempX, 2) + Math.pow(BTempY, 2));\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n  });\n}\n","import {\n  Complement,\n  Linear,\n  Opacity,\n  Binarization,\n  Gray\n} from './process';\n\nimport {\n  SmoothFilter,\n  CrossWindow,\n  SquareWindow,\n  HighPassFilter,\n  SharpenFilter\n} from './filter';\n\nexport default class Canvas {\n  constructor(element, image, width, height) {\n    if (typeof element === 'string') {\n      this.cvs = document.querySelectorAll(element)[0];\n    } else {\n      this.cvs = element;\n    }\n    this.ctx = this.cvs.getContext('2d');\n    this.cvs.width = width;\n    this.cvs.height = height;\n    this.width = width;\n    this.height = height;\n    this.ctx.drawImage(image, 0, 0);\n    this.imageData = this.ctx.getImageData(0, 0, width, height);\n    this.originImageData = this.ctx.getImageData(0, 0, width, height);\n  }\n\n  save() {\n    return this.cvs.toDataURL();\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    return this;\n  }\n\n  repaint() {\n    var x = arguments[1] || 0;\n    var y = arguments[2] || 0;\n    this.ctx.putImageData(this.imageData, x, y);\n    return this;\n  }\n\n  reset() {\n    this.ctx.putImageData(this.originImageData, 0, 0);\n    this.imageData = this.ctx.getImageData(0, 0, this.width, this.height);\n    return this;\n  }\n\n  complement() {\n    return Complement(this.imageData.data);\n  }\n\n  linear(x, y) {\n    return Linear(this.imageData.data, x, y);\n  }\n\n  opacity(opacity) {\n    return Opacity(this.imageData.data, opacity);\n  }\n\n  binarization(threshold) {\n    threshold = threshold || 128;\n    return Binarization(this.imageData.data, threshold);\n  }\n\n  gray() {\n    return Gray(this.imageData.data);\n  }\n\n  smooth(template, times) {\n    return SmoothFilter(this.imageData.data, this.width, this.height, template, times);\n  }\n\n  crosswindow() {\n    return CrossWindow(this.imageData.data, this.width, this.height);\n  }\n\n  squareWindow() {\n    return SquareWindow(this.imageData.data, this.width, this.height);\n  }\n\n  highPassFilter(template) {\n    return HighPassFilter(this.imageData.data, this.width, this.height, template);\n  }\n\n  sharpenFilter(templateX, templateY) {\n    return SharpenFilter(this.imageData.data, this.width, this.height, templateX, templateY);\n  }\n}\n","export const TemplateSmooth1 = new Array(1, 1, 1, 1, 0, 1, 1, 1, 1);         // 平滑模板 参数 1/8\nexport const TemplateSmooth2 = new Array(1, 2, 1, 2, 4, 2, 1, 2, 1);         // 平滑模板 参数 1/16\nexport const TemplateSmooth3 = new Array(1, 1, 1, 1, 2, 1, 1, 1, 1);         // 平滑模板 参数 1/10\nexport const Laplacian0 = new Array(0, -1, 0, -1, 4, -1, 0, -1, 0);  // 拉普拉斯算子\nexport const Laplacian1 = new Array(0, -1, 0, -1, 5, -1, 0, -1, 0);  // 拉普拉斯算子\nexport const Laplacian2 = new Array(1, 4, 1, 4, -20, 4, 1, 4, 1);    // 拉普拉斯算子\nexport const SobelX = new Array(1, 0, -1, 2, 0, -2, 1, 0, -1);       // Sobel算子x\nexport const SobelY = new Array(-1, -2, -1, 0, 0, 0, 1, 2, 1);       // Sobel算子y\nexport const PrewittX = new Array(1, 0, -1, 1, 0, -1, 1, 0, -1);     // Prewitt算子x\nexport const PrewittY = new Array(-1, -1, -1, 0, 0, 0, 1, 1, 1);     // Prewitt算子y\n","import Canvas from './canvas';\nimport {\n  TemplateSmooth1,\n  TemplateSmooth2,\n  TemplateSmooth3,\n  Laplacian0,\n  Laplacian1,\n  Laplacian2,\n  SobelX,\n  SobelY,\n  PrewittX,\n  PrewittY\n} from './const';\n\n/**\n * loadImage\n * @param {String} src\n * @return {Promise}\n */\nfunction loadImage(src) {\n  return new Promise((resolve, reject) => {\n    var image = new Image();\n    image.addEventListener(\"load\", function() {\n      resolve(image);\n    }, false);\n    image.addEventListener(\"error\", function() {\n      reject(new Error(\"Cannot load image\"));\n    }, false);\n    image.src = src;\n  });\n}\n\n/**\n * saveImage\n * @param {Pixel.Canvas} canvas\n * @return {Promise}\n */\nfunction saveImage(canvas) {\n  return new Promise((resolve, reject) => {\n    var src = canvas.save();\n    var image = new Image();\n    image.addEventListener('load', function() {\n      resolve(image);\n    }, false);\n    image.addEventListener('error', function() {\n      reject(new Error(\"Cannot load image\"));\n    }, false);\n    image.src = src;\n  });\n}\n\nexport default {\n  Canvas,\n  loadImage,\n  \n  TemplateSmooth1,\n  TemplateSmooth2,\n  TemplateSmooth3,\n  Laplacian0,\n  Laplacian1,\n  Laplacian2,\n  SobelX,\n  SobelY,\n  PrewittX,\n  PrewittY\n};\n"],"names":[],"mappings":"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"}