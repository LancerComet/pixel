{"version":3,"file":"pixel.js","sources":["../../src/process.js","../../src/utils.js","../../src/filter.js","../../src/canvas.js","../../src/const.js","../../src/main.js"],"sourcesContent":["/**\n * 求补\n * r' = 255 - r\n * g' = 255 - g\n * b' = 255 - b\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport function Complement(imageData) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        imageData[pos + i] = 255 - imageData[pos + i];\n        imageData[pos + i + 1] = 255 - imageData[pos + i + 1];\n        imageData[pos + i + 2] = 255 - imageData[pos + i + 2];\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   imageData[i] = 255 - imageData[i];\n    //   imageData[i+1] = 255 - imageData[i+1];\n    //   imageData[i+2] = 255 - imageData[i+2];\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 线性运算\n * r' = r * x + y\n * g' = g * x + y\n * b' = b * x + y\n * a' = a\n * @param {TypedArray} imageData\n * @param {Number} x\n * @param {Number} y\n * @return Promise\n */\nexport function Linear(imageData, x, y) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        imageData[pos + i] = x * imageData[pos + i] + y;\n        imageData[pos + i + 1] = x * imageData[pos + i + 1] + y;\n        imageData[pos + i + 2] = x * imageData[pos + i + 2] + y;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   imageData[i] = x * imageData[i] + y;\n    //   imageData[i+1] = x * imageData[i+1] + y;\n    //   imageData[i+2] = x * imageData[i+2] + y;\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 改变透明度\n * r' = r\n * g' = g\n * b' = b\n * a' = a * 255\n * @param {TypedArray} imageData\n * @param {Number} opacity: 0 ~ 1\n * @return Promise\n */\nexport function Opacity(imageData, opacity) {\n  var alpha = 225 * opacity;\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        imageData[pos + i + 3] = alpha;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for (let i = 0; i < imageData.length; i += 4) {\n    //   imageData[i+3] = alpha;\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 二值化\n * 先转换为灰度图\n * c' = c < threshold ? 0 : 255\n * a' = a\n * @param {TypedArray} imageData\n * @param {Number} threshold\n * @return Promise\n */\nexport function Binarization(imageData, threshold) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        var gray = 0.299 * imageData[pos + i] + 0.587 * imageData[pos + i + 1] + 0.114 * imageData[pos + i + 2];\n        imageData[pos + i] = imageData[pos + i + 1] = imageData[pos + i + 2] = gray < threshold ? 0 : 255;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   var gray = 0.299 * imageData[i] + 0.587 * imageData[i+1] + 0.114 * imageData[i+2];\n    //   imageData[i] = imageData[i+1] = imageData[i+2] = gray < threshold ? 0 : 255;\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 转换为灰度\n * r' = g' = b' = 0.299 * r + 0.587 * g + 0.114 * b\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport function Gray(imageData) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        var gray = 0.299 * imageData[pos + i] + 0.587 * imageData[pos + i + 1] + 0.114 * imageData[pos + i + 2];\n        imageData[pos + i] = imageData[pos + i + 1] = imageData[pos + i + 2] = gray;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   var gray = 0.299 * imageData[i] + 0.587 * imageData[i+1] + 0.114 * imageData[i+2];\n    //   imageData[i] = imageData[i+1] = imageData[i+2] = gray;\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 转换为灰度\n * r' = g' = b' = ( r + g + b )/3\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport function Gray2(imageData) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        var gray = (imageData[pos + i] + imageData[pos + i + 1] + imageData[pos + i + 2]) / 3;\n        imageData[pos + i] = imageData[pos + i + 1] = imageData[pos + i + 2] = gray;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   var gray = (imageData[i] + imageData[i+1] + imageData[i+2]) / 3;\n    //   imageData[i] = imageData[i+1] = imageData[i+2] = gray;\n    // }\n    // resolve(imageData);\n  });\n}\n","/**\n * 卷积运算\n * @param matrix 矩阵\n * @param template 模板\n * @return result 返回矩阵和模板卷积运算的结果\n */\nexport function Convolution(matrix, template) {\n    var result = 0;\n    for (var i = 0; i < matrix.length; ++i) {\n      result += matrix[i] * template[i];\n    }\n    return result;\n}\n\n/// 辅助函数\n/**\n * 升序函数，用于数组排序\n */\nexport function AscendingOrder(a, b) {\n  return a - b;\n}\n/**\n * 降序函数，用于数组排序\n */\nexport function DescendingOrder(a, b) {\n  return b - a;\n}\n","import {\n  Convolution,\n  AscendingOrder\n} from './utils';\n\n// 卷积运算的问题：边界的像素没有相邻像素，无法构成矩阵\n// 解决：补充像素\n// 1. 用0填充\n// 2. 用第一行／列和最后一行／列补充\n// 3. 反射边界填充：column[-1] = column[1]\n// 4. 图像拼接填充：column[-1] = column[width-1]\n//\n// 这里采用第二种策略\n// 以某个像素点为中心，获取其周边像素组成一个3 x 3矩阵\nfunction get3x3Matrix(originData, i, j, w, h) {\n  var topLeft = (i - 1) * w + j - 4, top = (i - 1) * w + j, topRight = (i - 1) * w + j + 4,\n    left = i * w + j - 4, center = i * w + j, right = i * w + j + 4,\n    bottomLeft = (i + 1) * w + j - 4, bottom = (i + 1) * w + j, bottomRight = (i + 1) * w + j + 4;\n  let points = [\n    i === 0 ? (j === 0 ? center : left) : (j === 0 ? top : topLeft),\n    i === 0 ? center : top,\n    i === 0 ? (j === w - 4 ? center : right) : (j === w - 4 ? top : topRight),\n    j === 0 ? center : left,\n    center,\n    j === w - 4 ? center : right,\n    i === h - 1 ? (j === 0 ? center : left) : (j === 0 ? bottom : bottomLeft),\n    i === h - 1 ? center : bottom,\n    i === h - 1 ? (j === w - 4 ? center : right) : (j === w - 4 ? bottom : bottomRight)\n  ];\n  let dataR = [\n    originData[points[0]], originData[points[1]], originData[points[2]],\n    originData[points[3]], originData[points[4]], originData[points[5]],\n    originData[points[6]], originData[points[7]], originData[points[8]]\n  ];\n  let dataG = [\n    originData[points[0] + 1], originData[points[1] + 1], originData[points[2] + 1],\n    originData[points[3] + 1], originData[points[4] + 1], originData[points[5] + 1],\n    originData[points[6] + 1], originData[points[7] + 1], originData[points[8] + 1]\n  ];\n  let dataB = [\n    originData[points[0] + 2], originData[points[1] + 2], originData[points[2] + 2],\n    originData[points[3] + 2], originData[points[4] + 2], originData[points[5] + 2],\n    originData[points[6] + 2], originData[points[7] + 2], originData[points[8] + 2]\n  ];\n  return [dataR, dataG, dataB];\n}\n\n// 十字窗口取相邻像素的规则不是3x3，需要特殊处理\nfunction getCrossWindowMatrix(originData, i, j, w, h) {\n  let top2 = (i - 2) * w + j, top1 = (i - 1) * w + j,\n    right1 = i * w + j + 4, right2 = i * w + j + 8,\n    bottom1 = (i + 1) * w + j, bottom2 = (i + 2) * w + j,\n    left2 = i * w + j - 8, left1 = i * w + j - 4,\n    center = i * w + j;\n  let points = [\n    i < 2 ? center : top2,\n    i < 1 ? center : top1,\n    j > w - 8 ? center : right1,\n    j > w - 12 ? center : right2,\n    i > h - 2 ? center : bottom1,\n    i > h - 3 ? center : bottom2,\n    j < 1 ? center : left1,\n    j < 2 ? center : left2\n  ];\n  let dataR = [\n    originData[points[0]], originData[points[1]], originData[points[2]],\n    originData[points[3]], originData[points[4]], originData[points[5]],\n    originData[points[6]], originData[points[7]], originData[points[8]]\n  ];\n  let dataG = [\n    originData[points[0] + 1], originData[points[1] + 1], originData[points[2] + 1],\n    originData[points[3] + 1], originData[points[4] + 1], originData[points[5] + 1],\n    originData[points[6] + 1], originData[points[7] + 1], originData[points[8] + 1]\n  ];\n  let dataB = [\n    originData[points[0] + 2], originData[points[1] + 2], originData[points[2] + 2],\n    originData[points[3] + 2], originData[points[4] + 2], originData[points[5] + 2],\n    originData[points[6] + 2], originData[points[7] + 2], originData[points[8] + 2]\n  ];\n  return [dataR, dataG, dataB];\n}\n\n/**\n * Smooth Filter\n * @param {TypedArray} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function SmoothFilter(imageData, srcw, srch, template, times) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          imageData[(irow + i) * rowPixelLength + j] = Convolution(matrix3x3[0], template) / times;\n          imageData[(irow + i) * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template) / times;\n          imageData[(irow + i) * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template) / times;\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n    //     let matrix3x3 = get3x3Matrix(originData, i, j, rowPixelLength, srch);\n    //     imageData[i * rowPixelLength + j] = Convolution(matrix3x3[0], template) / times;\n    //     imageData[i * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template) / times;\n    //     imageData[i * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template) / times;\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * Median Filter : Cross Window\n * @param {TypedArray} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function CrossWindow(imageData, srcw, srch) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = getCrossWindowMatrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          dataR.sort(AscendingOrder);\n          dataG.sort(AscendingOrder);\n          dataB.sort(AscendingOrder);\n          imageData[(irow + i) * rowPixelLength + j] = dataR[4];\n          imageData[(irow + i) * rowPixelLength + j + 1] = dataG[4];\n          imageData[(irow + i) * rowPixelLength + j + 2] = dataB[4];\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n        // let matrix3x3 = getCrossWindowMatrix(originData, i, j, rowPixelLength, srch);\n        // let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n        // dataR.sort(AscendingOrder);\n        // dataG.sort(AscendingOrder);\n        // dataB.sort(AscendingOrder);\n        // imageData[i * rowPixelLength + j] = dataR[4];\n        // imageData[i * rowPixelLength + j + 1] = dataG[4];\n        // imageData[i * rowPixelLength + j + 2] = dataB[4];\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * Median Filter : Square Window\n * @param {Array} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function SquareWindow(imageData, srcw, srch) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          dataR.sort(AscendingOrder);\n          dataG.sort(AscendingOrder);\n          dataB.sort(AscendingOrder);\n          imageData[(irow + i) * rowPixelLength + j] = dataR[4];\n          imageData[(irow + i) * rowPixelLength + j + 1] = dataG[4];\n          imageData[(irow + i) * rowPixelLength + j + 2] = dataB[4];\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n    //     let matrix3x3 = get3x3Matrix(originData, i, j, rowPixelLength, srch);\n    //     let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n    //     dataR.sort(AscendingOrder);\n    //     dataG.sort(AscendingOrder);\n    //     dataB.sort(AscendingOrder);\n    //     imageData[i * rowPixelLength + j] = dataR[4];\n    //     imageData[i * rowPixelLength + j + 1] = dataG[4];\n    //     imageData[i * rowPixelLength + j + 2] = dataB[4];\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * High Pass Filter\n * @param {Array} imageData\n * @param {Number} srcw\n * @param {Number} srch\n * @param {Array} template\n */\nexport function HighPassFilter(imageData, srcw, srch, template) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          imageData[(irow + i) * rowPixelLength + j] = Convolution(matrix3x3[0], template);\n          imageData[(irow + i) * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template);\n          imageData[(irow + i) * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template);\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n    //     let matrix3x3 = get3x3Matrix(originData, i, j, rowPixelLength, srch);\n    //     imageData[i * rowPixelLength + j] = Convolution(matrix3x3[0], template);\n    //     imageData[i * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template);\n    //     imageData[i * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template);\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * Sharpen Filter\n */\nexport function SharpenFilter(imageData, srcw, srch, templateX, templateY) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          var RTempX = Convolution(dataR, templateX);\n          var RTempY = Convolution(dataR, templateY);\n          imageData[(irow + i) * rowPixelLength + j] = Math.sqrt(Math.pow(RTempX, 2) + Math.pow(RTempY, 2));\n          var GTempX = Convolution(dataG, templateX);\n          var GTempY = Convolution(dataG, templateY);\n          imageData[(irow + i) * rowPixelLength + j + 1] = Math.sqrt(Math.pow(GTempX, 2) + Math.pow(GTempY, 2));\n          var BTempX = Convolution(dataB, templateX);\n          var BTempY = Convolution(dataB, templateY);\n          imageData[(irow + i) * rowPixelLength + j + 2] = Math.sqrt(Math.pow(BTempX, 2) + Math.pow(BTempY, 2));\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n    //     let matrix3x3 = get3x3Matrix(originData, i, j, rowPixelLength, srch);\n    //     let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n    //     var RTempX = Convolution(dataR, templateX);\n    //     var RTempY = Convolution(dataR, templateY);\n    //     imageData[i * rowPixelLength + j] = Math.sqrt(Math.pow(RTempX, 2) + Math.pow(RTempY, 2));\n    //     var GTempX = Convolution(dataG, templateX);\n    //     var GTempY = Convolution(dataG, templateY);\n    //     imageData[i * rowPixelLength + j + 1] = Math.sqrt(Math.pow(GTempX, 2) + Math.pow(GTempY, 2));\n    //     var BTempX = Convolution(dataB, templateX);\n    //     var BTempY = Convolution(dataB, templateY);\n    //     imageData[i * rowPixelLength + j + 2] = Math.sqrt(Math.pow(BTempX, 2) + Math.pow(BTempY, 2));\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n","import {\n  Complement,\n  Linear,\n  Opacity,\n  Binarization,\n  Gray\n} from './process';\n\nimport {\n  SmoothFilter,\n  CrossWindow,\n  SquareWindow,\n  HighPassFilter,\n  SharpenFilter\n} from './filter';\n\nexport default class Canvas {\n  constructor(element, image, width, height) {\n    if (typeof element === 'string') {\n      this.cvs = document.querySelectorAll(element)[0];\n    } else {\n      this.cvs = element;\n    }\n    this.ctx = this.cvs.getContext('2d');\n    this.cvs.width = width;\n    this.cvs.height = height;\n    this.width = width;\n    this.height = height;\n    this.ctx.drawImage(image, 0, 0);\n    this.imageData = this.ctx.getImageData(0, 0, width, height);\n    this.originImageData = this.ctx.getImageData(0, 0, width, height);\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    return this;\n  }\n\n  repaint() {\n    var x = arguments[1] || 0;\n    var y = arguments[2] || 0;\n    this.ctx.putImageData(this.imageData, x, y);\n    return this;\n  }\n\n  reset() {\n    this.ctx.putImageData(this.originImageData, 0, 0);\n    this.imageData = this.ctx.getImageData(0, 0, this.width, this.height);\n    return this;\n  }\n\n  complement() {\n    return Complement(this.imageData.data);\n  }\n\n  linear(x, y) {\n    return Linear(this.imageData.data, x, y);\n  }\n\n  opacity(opacity) {\n    return Opacity(this.imageData.data, opacity);\n  }\n\n  binarization(threshold) {\n    return Binarization(this.imageData.data, threshold);\n  }\n\n  gray() {\n    return Gray(this.imageData.data);\n  }\n\n  smooth(template, times) {\n    return SmoothFilter(this.imageData.data, this.width, this.height, template, times);\n  }\n\n  crosswindow() {\n    return CrossWindow(this.imageData.data, this.width, this.height);\n  }\n\n  squareWindow() {\n    return SquareWindow(this.imageData.data, this.width, this.height);\n  }\n\n  highPassFilter(template) {\n    return HighPassFilter(this.imageData.data, this.width, this.height, template);\n  }\n\n  sharpenFilter(templateX, templateY) {\n    return SharpenFilter(this.imageData.data, this.width, this.height, templateX, templateY);\n  }\n}\n","export const TemplateSmooth1 = new Array(1, 1, 1, 1, 0, 1, 1, 1, 1);         // 平滑模板 参数 1/8\nexport const TemplateSmooth2 = new Array(1, 2, 1, 2, 4, 2, 1, 2, 1);         // 平滑模板 参数 1/16\nexport const TemplateSmooth3 = new Array(1, 1, 1, 1, 2, 1, 1, 1, 1);         // 平滑模板 参数 1/10\nexport const Laplacian0 = new Array(0, -1, 0, -1, 4, -1, 0, -1, 0);  // 拉普拉斯算子\nexport const Laplacian1 = new Array(0, -1, 0, -1, 5, -1, 0, -1, 0);  // 拉普拉斯算子\nexport const Laplacian2 = new Array(1, 4, 1, 4, -20, 4, 1, 4, 1);    // 拉普拉斯算子\nexport const SobelX = new Array(1, 0, -1, 2, 0, -2, 1, 0, -1);       // Sobel算子x\nexport const SobelY = new Array(-1, -2, -1, 0, 0, 0, 1, 2, 1);       // Sobel算子y\nexport const PrewittX = new Array(1, 0, -1, 1, 0, -1, 1, 0, -1);     // Prewitt算子x\nexport const PrewittY = new Array(-1, -1, -1, 0, 0, 0, 1, 1, 1);     // Prewitt算子y\n","import Canvas from './canvas';\nimport {\n  TemplateSmooth1,\n  TemplateSmooth2,\n  TemplateSmooth3,\n  Laplacian0,\n  Laplacian1,\n  Laplacian2,\n  SobelX,\n  SobelY,\n  PrewittX,\n  PrewittY\n} from './const';\n\nfunction loadImage(src) {\n  return new Promise((resolve, reject) => {\n    var image = new Image();\n    image.addEventListener(\"load\", function() {\n      resolve(image);\n    }, false);\n    image.addEventListener(\"error\", function() {\n      reject(new Error(\"Cannot load image\"));\n    }, false);\n    image.src = src;\n  });\n}\n\nexport default {\n  Canvas,\n  loadImage,\n  \n  TemplateSmooth1,\n  TemplateSmooth2,\n  TemplateSmooth3,\n  Laplacian0,\n  Laplacian1,\n  Laplacian2,\n  SobelX,\n  SobelY,\n  PrewittX,\n  PrewittY\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,AAAO,SAAS,UAAT,CAAoB,SAApB,EAA+B;MAChC,IAAI,MAAM,GAAN,GAAY,CAApB;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B;WACvB,IAAI,IAAI,CAAZ,EAAe,IAAI,GAAnB,EAAwB,KAAK,CAA7B,EAAgC;kBACpB,MAAM,CAAhB,IAAqB,MAAM,UAAU,MAAM,CAAhB,CAA3B;kBACU,MAAM,CAAN,GAAU,CAApB,IAAyB,MAAM,UAAU,MAAM,CAAN,GAAU,CAApB,CAA/B;kBACU,MAAM,CAAN,GAAU,CAApB,IAAyB,MAAM,UAAU,MAAM,CAAN,GAAU,CAApB,CAA/B;;iBAES,YAAM;eACR,GAAP;YACI,MAAM,CAAN,GAAU,UAAU,MAAxB,EAAgC;oBACpB,GAAV,EAAe,CAAf;SADF,MAEO,IAAI,MAAM,UAAU,MAApB,EAA4B;oBACvB,GAAV,EAAe,UAAU,MAAV,GAAmB,GAAlC;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;;GAnBK,CAAP;;;;;;;;;;;;;;AAyCF,AAAO,SAAS,MAAT,CAAgB,SAAhB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC;MAClC,IAAI,MAAM,GAAN,GAAY,CAApB;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B;WACvB,IAAI,IAAI,CAAZ,EAAe,IAAI,GAAnB,EAAwB,KAAK,CAA7B,EAAgC;kBACpB,MAAM,CAAhB,IAAqB,IAAI,UAAU,MAAM,CAAhB,CAAJ,GAAyB,CAA9C;kBACU,MAAM,CAAN,GAAU,CAApB,IAAyB,IAAI,UAAU,MAAM,CAAN,GAAU,CAApB,CAAJ,GAA6B,CAAtD;kBACU,MAAM,CAAN,GAAU,CAApB,IAAyB,IAAI,UAAU,MAAM,CAAN,GAAU,CAApB,CAAJ,GAA6B,CAAtD;;iBAES,YAAM;eACR,GAAP;YACI,MAAM,CAAN,GAAU,UAAU,MAAxB,EAAgC;oBACpB,GAAV,EAAe,CAAf;SADF,MAEO,IAAI,MAAM,UAAU,MAApB,EAA4B;oBACvB,GAAV,EAAe,UAAU,MAAV,GAAmB,GAAlC;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;;GAnBK,CAAP;;;;;;;;;;;;;AAwCF,AAAO,SAAS,OAAT,CAAiB,SAAjB,EAA4B,OAA5B,EAAqC;MACtC,QAAQ,MAAM,OAAlB;MACI,IAAI,MAAM,GAAN,GAAY,CAApB;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B;WACvB,IAAI,IAAI,CAAZ,EAAe,IAAI,GAAnB,EAAwB,KAAK,CAA7B,EAAgC;kBACpB,MAAM,CAAN,GAAU,CAApB,IAAyB,KAAzB;;iBAES,YAAM;eACR,GAAP;YACI,MAAM,CAAN,GAAU,UAAU,MAAxB,EAAgC;oBACpB,GAAV,EAAe,CAAf;SADF,MAEO,IAAI,MAAM,UAAU,MAApB,EAA4B;oBACvB,GAAV,EAAe,UAAU,MAAV,GAAmB,GAAlC;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;GAjBK,CAAP;;;;;;;;;;;;AAmCF,AAAO,SAAS,YAAT,CAAsB,SAAtB,EAAiC,SAAjC,EAA4C;MAC7C,IAAI,MAAM,GAAN,GAAY,CAApB;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B;WACvB,IAAI,IAAI,CAAZ,EAAe,IAAI,GAAnB,EAAwB,KAAK,CAA7B,EAAgC;YAC1B,OAAO,QAAQ,UAAU,MAAM,CAAhB,CAAR,GAA6B,QAAQ,UAAU,MAAM,CAAN,GAAU,CAApB,CAArC,GAA8D,QAAQ,UAAU,MAAM,CAAN,GAAU,CAApB,CAAjF;kBACU,MAAM,CAAhB,IAAqB,UAAU,MAAM,CAAN,GAAU,CAApB,IAAyB,UAAU,MAAM,CAAN,GAAU,CAApB,IAAyB,OAAO,SAAP,GAAmB,CAAnB,GAAuB,GAA9F;;iBAES,YAAM;eACR,GAAP;YACI,MAAM,CAAN,GAAU,UAAU,MAAxB,EAAgC;oBACpB,GAAV,EAAe,CAAf;SADF,MAEO,IAAI,MAAM,UAAU,MAApB,EAA4B;oBACvB,GAAV,EAAe,UAAU,MAAV,GAAmB,GAAlC;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;GAlBK,CAAP;;;;;;;;;;AAmCF,AAAO,SAAS,IAAT,CAAc,SAAd,EAAyB;MAC1B,IAAI,MAAM,GAAN,GAAY,CAApB;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B;WACvB,IAAI,IAAI,CAAZ,EAAe,IAAI,GAAnB,EAAwB,KAAK,CAA7B,EAAgC;YAC1B,OAAO,QAAQ,UAAU,MAAM,CAAhB,CAAR,GAA6B,QAAQ,UAAU,MAAM,CAAN,GAAU,CAApB,CAArC,GAA8D,QAAQ,UAAU,MAAM,CAAN,GAAU,CAApB,CAAjF;kBACU,MAAM,CAAhB,IAAqB,UAAU,MAAM,CAAN,GAAU,CAApB,IAAyB,UAAU,MAAM,CAAN,GAAU,CAApB,IAAyB,IAAvE;;iBAES,YAAM;eACR,GAAP;YACI,MAAM,CAAN,GAAU,UAAU,MAAxB,EAAgC;oBACpB,GAAV,EAAe,CAAf;SADF,MAEO,IAAI,MAAM,UAAU,MAApB,EAA4B;oBACvB,GAAV,EAAe,UAAU,MAAV,GAAmB,GAAlC;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;GAlBK,CAAP;;;;;;;;;ACrKF,AAAO,SAAS,WAAT,CAAqB,MAArB,EAA6B,QAA7B,EAAuC;MACtC,SAAS,CAAb;OACK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,MAA3B,EAAmC,EAAE,CAArC,EAAwC;cAC5B,OAAO,CAAP,IAAY,SAAS,CAAT,CAAtB;;SAEK,MAAP;;;;;;;AAOJ,AAAO,SAAS,cAAT,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B;SAC5B,IAAI,CAAX;;;;;;;;;;;;ACLF,SAAS,YAAT,CAAsB,UAAtB,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C;MACxC,UAAU,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAd,GAAkB,CAAhC;MAAmC,MAAM,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAvD;MAA0D,WAAW,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAd,GAAkB,CAAvF;MACE,OAAO,IAAI,CAAJ,GAAQ,CAAR,GAAY,CADrB;MACwB,SAAS,IAAI,CAAJ,GAAQ,CADzC;MAC4C,QAAQ,IAAI,CAAJ,GAAQ,CAAR,GAAY,CADhE;MAEE,aAAa,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAd,GAAkB,CAFjC;MAEoC,SAAS,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAF3D;MAE8D,cAAc,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAd,GAAkB,CAF9F;MAGI,SAAS,CACX,MAAM,CAAN,GAAW,MAAM,CAAN,GAAU,MAAV,GAAmB,IAA9B,GAAuC,MAAM,CAAN,GAAU,GAAV,GAAgB,OAD5C,EAEX,MAAM,CAAN,GAAU,MAAV,GAAmB,GAFR,EAGX,MAAM,CAAN,GAAW,MAAM,IAAI,CAAV,GAAc,MAAd,GAAuB,KAAlC,GAA4C,MAAM,IAAI,CAAV,GAAc,GAAd,GAAoB,QAHrD,EAIX,MAAM,CAAN,GAAU,MAAV,GAAmB,IAJR,EAKX,MALW,EAMX,MAAM,IAAI,CAAV,GAAc,MAAd,GAAuB,KANZ,EAOX,MAAM,IAAI,CAAV,GAAe,MAAM,CAAN,GAAU,MAAV,GAAmB,IAAlC,GAA2C,MAAM,CAAN,GAAU,MAAV,GAAmB,UAPnD,EAQX,MAAM,IAAI,CAAV,GAAc,MAAd,GAAuB,MARZ,EASX,MAAM,IAAI,CAAV,GAAe,MAAM,IAAI,CAAV,GAAc,MAAd,GAAuB,KAAtC,GAAgD,MAAM,IAAI,CAAV,GAAc,MAAd,GAAuB,WAT5D,CAAb;MAWI,QAAQ,CACV,WAAW,OAAO,CAAP,CAAX,CADU,EACa,WAAW,OAAO,CAAP,CAAX,CADb,EACoC,WAAW,OAAO,CAAP,CAAX,CADpC,EAEV,WAAW,OAAO,CAAP,CAAX,CAFU,EAEa,WAAW,OAAO,CAAP,CAAX,CAFb,EAEoC,WAAW,OAAO,CAAP,CAAX,CAFpC,EAGV,WAAW,OAAO,CAAP,CAAX,CAHU,EAGa,WAAW,OAAO,CAAP,CAAX,CAHb,EAGoC,WAAW,OAAO,CAAP,CAAX,CAHpC,CAAZ;MAKI,QAAQ,CACV,WAAW,OAAO,CAAP,IAAY,CAAvB,CADU,EACiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CADjB,EAC4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAD5C,EAEV,WAAW,OAAO,CAAP,IAAY,CAAvB,CAFU,EAEiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CAFjB,EAE4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAF5C,EAGV,WAAW,OAAO,CAAP,IAAY,CAAvB,CAHU,EAGiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CAHjB,EAG4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAH5C,CAAZ;MAKI,QAAQ,CACV,WAAW,OAAO,CAAP,IAAY,CAAvB,CADU,EACiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CADjB,EAC4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAD5C,EAEV,WAAW,OAAO,CAAP,IAAY,CAAvB,CAFU,EAEiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CAFjB,EAE4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAF5C,EAGV,WAAW,OAAO,CAAP,IAAY,CAAvB,CAHU,EAGiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CAHjB,EAG4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAH5C,CAAZ;SAKO,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAP;;;;AAIF,SAAS,oBAAT,CAA8B,UAA9B,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD;MAChD,OAAO,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAzB;MAA4B,OAAO,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAAjD;MACE,SAAS,IAAI,CAAJ,GAAQ,CAAR,GAAY,CADvB;MAC0B,SAAS,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAD/C;MAEE,UAAU,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAF1B;MAE6B,UAAU,CAAC,IAAI,CAAL,IAAU,CAAV,GAAc,CAFrD;MAGE,QAAQ,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAHtB;MAGyB,QAAQ,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAH7C;MAIE,SAAS,IAAI,CAAJ,GAAQ,CAJnB;MAKI,SAAS,CACX,IAAI,CAAJ,GAAQ,MAAR,GAAiB,IADN,EAEX,IAAI,CAAJ,GAAQ,MAAR,GAAiB,IAFN,EAGX,IAAI,IAAI,CAAR,GAAY,MAAZ,GAAqB,MAHV,EAIX,IAAI,IAAI,EAAR,GAAa,MAAb,GAAsB,MAJX,EAKX,IAAI,IAAI,CAAR,GAAY,MAAZ,GAAqB,OALV,EAMX,IAAI,IAAI,CAAR,GAAY,MAAZ,GAAqB,OANV,EAOX,IAAI,CAAJ,GAAQ,MAAR,GAAiB,KAPN,EAQX,IAAI,CAAJ,GAAQ,MAAR,GAAiB,KARN,CAAb;MAUI,QAAQ,CACV,WAAW,OAAO,CAAP,CAAX,CADU,EACa,WAAW,OAAO,CAAP,CAAX,CADb,EACoC,WAAW,OAAO,CAAP,CAAX,CADpC,EAEV,WAAW,OAAO,CAAP,CAAX,CAFU,EAEa,WAAW,OAAO,CAAP,CAAX,CAFb,EAEoC,WAAW,OAAO,CAAP,CAAX,CAFpC,EAGV,WAAW,OAAO,CAAP,CAAX,CAHU,EAGa,WAAW,OAAO,CAAP,CAAX,CAHb,EAGoC,WAAW,OAAO,CAAP,CAAX,CAHpC,CAAZ;MAKI,QAAQ,CACV,WAAW,OAAO,CAAP,IAAY,CAAvB,CADU,EACiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CADjB,EAC4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAD5C,EAEV,WAAW,OAAO,CAAP,IAAY,CAAvB,CAFU,EAEiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CAFjB,EAE4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAF5C,EAGV,WAAW,OAAO,CAAP,IAAY,CAAvB,CAHU,EAGiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CAHjB,EAG4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAH5C,CAAZ;MAKI,QAAQ,CACV,WAAW,OAAO,CAAP,IAAY,CAAvB,CADU,EACiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CADjB,EAC4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAD5C,EAEV,WAAW,OAAO,CAAP,IAAY,CAAvB,CAFU,EAEiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CAFjB,EAE4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAF5C,EAGV,WAAW,OAAO,CAAP,IAAY,CAAvB,CAHU,EAGiB,WAAW,OAAO,CAAP,IAAY,CAAvB,CAHjB,EAG4C,WAAW,OAAO,CAAP,IAAY,CAAvB,CAH5C,CAAZ;SAKO,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAP;;;;;;;;;AASF,AAAO,SAAS,YAAT,CAAsB,SAAtB,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,QAA7C,EAAuD,KAAvD,EAA8D;MAC/D,aAAa,UAAU,KAAV,CAAgB,CAAhB,CAAjB;MACI,iBAAiB,OAAO,CAA5B;MACI,IAAI,GAAR;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B;WACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,IAApB,EAA0B,EAAE,CAA5B,EAA+B;aACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,cAApB,EAAoC,KAAK,CAAzC,EAA4C;cACtC,YAAY,aAAa,UAAb,EAAyB,OAAO,CAAhC,EAAmC,CAAnC,EAAsC,cAAtC,EAAsD,IAAtD,CAAhB;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAAxC,IAA6C,YAAY,UAAU,CAAV,CAAZ,EAA0B,QAA1B,IAAsC,KAAnF;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,YAAY,UAAU,CAAV,CAAZ,EAA0B,QAA1B,IAAsC,KAAvF;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,YAAY,UAAU,CAAV,CAAZ,EAA0B,QAA1B,IAAsC,KAAvF;;;iBAGO,YAAM;gBACP,IAAR;YACI,OAAO,CAAP,GAAW,IAAf,EAAqB;oBACT,IAAV,EAAgB,CAAhB;SADF,MAEO,IAAI,OAAO,IAAX,EAAiB;oBACZ,IAAV,EAAgB,OAAO,IAAvB;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;;;;;GAtBK,CAAP;;;;;;;;;AA0CF,AAAO,SAAS,WAAT,CAAqB,SAArB,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C;MAC7C,aAAa,UAAU,KAAV,CAAgB,CAAhB,CAAjB;MACI,iBAAiB,OAAO,CAA5B;MACI,IAAI,GAAR;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B;WACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,IAApB,EAA0B,EAAE,CAA5B,EAA+B;aACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,cAApB,EAAoC,KAAK,CAAzC,EAA4C;cACtC,YAAY,qBAAqB,UAArB,EAAiC,OAAO,CAAxC,EAA2C,CAA3C,EAA8C,cAA9C,EAA8D,IAA9D,CAAhB;cACI,QAAQ,UAAU,CAAV,CAAZ;cAA0B,QAAQ,UAAU,CAAV,CAAlC;cAAgD,QAAQ,UAAU,CAAV,CAAxD;gBACM,IAAN,CAAW,cAAX;gBACM,IAAN,CAAW,cAAX;gBACM,IAAN,CAAW,cAAX;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAAxC,IAA6C,MAAM,CAAN,CAA7C;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,MAAM,CAAN,CAAjD;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,MAAM,CAAN,CAAjD;;;iBAGO,YAAM;gBACP,IAAR;YACI,OAAO,CAAP,GAAW,IAAf,EAAqB;oBACT,IAAV,EAAgB,CAAhB;SADF,MAEO,IAAI,OAAO,IAAX,EAAiB;oBACZ,IAAV,EAAgB,OAAO,IAAvB;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;;;;;;;;;GA1BK,CAAP;;;;;;;;;AAkDF,AAAO,SAAS,YAAT,CAAsB,SAAtB,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C;MAC9C,aAAa,UAAU,KAAV,CAAgB,CAAhB,CAAjB;MACI,iBAAiB,OAAO,CAA5B;MACI,IAAI,GAAR;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B;WACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,IAApB,EAA0B,EAAE,CAA5B,EAA+B;aACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,cAApB,EAAoC,KAAK,CAAzC,EAA4C;cACtC,YAAY,aAAa,UAAb,EAAyB,OAAO,CAAhC,EAAmC,CAAnC,EAAsC,cAAtC,EAAsD,IAAtD,CAAhB;cACI,QAAQ,UAAU,CAAV,CAAZ;cAA0B,QAAQ,UAAU,CAAV,CAAlC;cAAgD,QAAQ,UAAU,CAAV,CAAxD;gBACM,IAAN,CAAW,cAAX;gBACM,IAAN,CAAW,cAAX;gBACM,IAAN,CAAW,cAAX;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAAxC,IAA6C,MAAM,CAAN,CAA7C;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,MAAM,CAAN,CAAjD;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,MAAM,CAAN,CAAjD;;;iBAGO,YAAM;gBACP,IAAR;YACI,OAAO,CAAP,GAAW,IAAf,EAAqB;oBACT,IAAV,EAAgB,CAAhB;SADF,MAEO,IAAI,OAAO,IAAX,EAAiB;oBACZ,IAAV,EAAgB,OAAO,IAAvB;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;;;;;;;;;GA1BK,CAAP;;;;;;;;;;AAmDF,AAAO,SAAS,cAAT,CAAwB,SAAxB,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C,QAA/C,EAAyD;MAC1D,aAAa,UAAU,KAAV,CAAgB,CAAhB,CAAjB;MACI,iBAAiB,OAAO,CAA5B;MACI,IAAI,GAAR;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B;WACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,IAApB,EAA0B,EAAE,CAA5B,EAA+B;aACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,cAApB,EAAoC,KAAK,CAAzC,EAA4C;cACtC,YAAY,aAAa,UAAb,EAAyB,OAAO,CAAhC,EAAmC,CAAnC,EAAsC,cAAtC,EAAsD,IAAtD,CAAhB;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAAxC,IAA6C,YAAY,UAAU,CAAV,CAAZ,EAA0B,QAA1B,CAA7C;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,YAAY,UAAU,CAAV,CAAZ,EAA0B,QAA1B,CAAjD;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,YAAY,UAAU,CAAV,CAAZ,EAA0B,QAA1B,CAAjD;;;iBAGO,YAAM;gBACP,IAAR;YACI,OAAO,CAAP,GAAW,IAAf,EAAqB;oBACT,IAAV,EAAgB,CAAhB;SADF,MAEO,IAAI,OAAO,IAAX,EAAiB;oBACZ,IAAV,EAAgB,OAAO,IAAvB;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;;;;;GAtBK,CAAP;;;;;;AAuCF,AAAO,SAAS,aAAT,CAAuB,SAAvB,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,SAA9C,EAAyD,SAAzD,EAAoE;MACrE,aAAa,UAAU,KAAV,CAAgB,CAAhB,CAAjB;MACI,iBAAiB,OAAO,CAA5B;MACI,IAAI,GAAR;SACO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;aAE7B,SAAT,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B;WACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,IAApB,EAA0B,EAAE,CAA5B,EAA+B;aACxB,IAAI,IAAI,CAAb,EAAgB,IAAI,cAApB,EAAoC,KAAK,CAAzC,EAA4C;cACtC,YAAY,aAAa,UAAb,EAAyB,OAAO,CAAhC,EAAmC,CAAnC,EAAsC,cAAtC,EAAsD,IAAtD,CAAhB;cACI,QAAQ,UAAU,CAAV,CAAZ;cAA0B,QAAQ,UAAU,CAAV,CAAlC;cAAgD,QAAQ,UAAU,CAAV,CAAxD;cACI,SAAS,YAAY,KAAZ,EAAmB,SAAnB,CAAb;cACI,SAAS,YAAY,KAAZ,EAAmB,SAAnB,CAAb;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAAxC,IAA6C,KAAK,IAAL,CAAU,KAAK,GAAL,CAAS,MAAT,EAAiB,CAAjB,IAAsB,KAAK,GAAL,CAAS,MAAT,EAAiB,CAAjB,CAAhC,CAA7C;cACI,SAAS,YAAY,KAAZ,EAAmB,SAAnB,CAAb;cACI,SAAS,YAAY,KAAZ,EAAmB,SAAnB,CAAb;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,KAAK,IAAL,CAAU,KAAK,GAAL,CAAS,MAAT,EAAiB,CAAjB,IAAsB,KAAK,GAAL,CAAS,MAAT,EAAiB,CAAjB,CAAhC,CAAjD;cACI,SAAS,YAAY,KAAZ,EAAmB,SAAnB,CAAb;cACI,SAAS,YAAY,KAAZ,EAAmB,SAAnB,CAAb;oBACU,CAAC,OAAO,CAAR,IAAa,cAAb,GAA8B,CAA9B,GAAkC,CAA5C,IAAiD,KAAK,IAAL,CAAU,KAAK,GAAL,CAAS,MAAT,EAAiB,CAAjB,IAAsB,KAAK,GAAL,CAAS,MAAT,EAAiB,CAAjB,CAAhC,CAAjD;;;iBAGO,YAAM;gBACP,IAAR;YACI,OAAO,CAAP,GAAW,IAAf,EAAqB;oBACT,IAAV,EAAgB,CAAhB;SADF,MAEO,IAAI,OAAO,IAAX,EAAiB;oBACZ,IAAV,EAAgB,OAAO,IAAvB;SADK,MAEA;kBACG,SAAR;;OAPJ,EASG,CATH;;cAWQ,CAAV,EAAa,CAAb;;;;;;;;;;;;;;;;;;GA7BK,CAAP;;;IClRmB;kBACP,OAAZ,EAAqB,KAArB,EAA4B,KAA5B,EAAmC,MAAnC,EAA2C;;;QACrC,OAAO,OAAP,KAAmB,QAAvB,EAAiC;WAC1B,GAAL,GAAW,SAAS,gBAAT,CAA0B,OAA1B,EAAmC,CAAnC,CAAX;KADF,MAEO;WACA,GAAL,GAAW,OAAX;;SAEG,GAAL,GAAW,KAAK,GAAL,CAAS,UAAT,CAAoB,IAApB,CAAX;SACK,GAAL,CAAS,KAAT,GAAiB,KAAjB;SACK,GAAL,CAAS,MAAT,GAAkB,MAAlB;SACK,KAAL,GAAa,KAAb;SACK,MAAL,GAAc,MAAd;SACK,GAAL,CAAS,SAAT,CAAmB,KAAnB,EAA0B,CAA1B,EAA6B,CAA7B;SACK,SAAL,GAAiB,KAAK,GAAL,CAAS,YAAT,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,KAA5B,EAAmC,MAAnC,CAAjB;SACK,eAAL,GAAuB,KAAK,GAAL,CAAS,YAAT,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,KAA5B,EAAmC,MAAnC,CAAvB;;;;;4BAGM;WACD,GAAL,CAAS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK,KAA9B,EAAqC,KAAK,MAA1C;aACO,IAAP;;;;8BAGQ;UACJ,IAAI,UAAU,CAAV,KAAgB,CAAxB;UACI,IAAI,UAAU,CAAV,KAAgB,CAAxB;WACK,GAAL,CAAS,YAAT,CAAsB,KAAK,SAA3B,EAAsC,CAAtC,EAAyC,CAAzC;aACO,IAAP;;;;4BAGM;WACD,GAAL,CAAS,YAAT,CAAsB,KAAK,eAA3B,EAA4C,CAA5C,EAA+C,CAA/C;WACK,SAAL,GAAiB,KAAK,GAAL,CAAS,YAAT,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,KAAK,KAAjC,EAAwC,KAAK,MAA7C,CAAjB;aACO,IAAP;;;;iCAGW;aACJ,WAAW,KAAK,SAAL,CAAe,IAA1B,CAAP;;;;2BAGK,GAAG,GAAG;aACJ,OAAO,KAAK,SAAL,CAAe,IAAtB,EAA4B,CAA5B,EAA+B,CAA/B,CAAP;;;;4BAGM,UAAS;aACR,QAAQ,KAAK,SAAL,CAAe,IAAvB,EAA6B,QAA7B,CAAP;;;;iCAGW,WAAW;aACf,aAAa,KAAK,SAAL,CAAe,IAA5B,EAAkC,SAAlC,CAAP;;;;2BAGK;aACE,KAAK,KAAK,SAAL,CAAe,IAApB,CAAP;;;;2BAGK,UAAU,OAAO;aACf,aAAa,KAAK,SAAL,CAAe,IAA5B,EAAkC,KAAK,KAAvC,EAA8C,KAAK,MAAnD,EAA2D,QAA3D,EAAqE,KAArE,CAAP;;;;kCAGY;aACL,YAAY,KAAK,SAAL,CAAe,IAA3B,EAAiC,KAAK,KAAtC,EAA6C,KAAK,MAAlD,CAAP;;;;mCAGa;aACN,aAAa,KAAK,SAAL,CAAe,IAA5B,EAAkC,KAAK,KAAvC,EAA8C,KAAK,MAAnD,CAAP;;;;mCAGa,UAAU;aAChB,eAAe,KAAK,SAAL,CAAe,IAA9B,EAAoC,KAAK,KAAzC,EAAgD,KAAK,MAArD,EAA6D,QAA7D,CAAP;;;;kCAGY,WAAW,WAAW;aAC3B,cAAc,KAAK,SAAL,CAAe,IAA7B,EAAmC,KAAK,KAAxC,EAA+C,KAAK,MAApD,EAA4D,SAA5D,EAAuE,SAAvE,CAAP;;;;;;ACxFG,IAAM,kBAAkB,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAxB;AACP,AAAO,IAAM,kBAAkB,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAxB;AACP,AAAO,IAAM,kBAAkB,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAxB;AACP,AAAO,IAAM,aAAa,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAAC,CAArB,EAAwB,CAAxB,EAA2B,CAAC,CAA5B,EAA+B,CAA/B,EAAkC,CAAC,CAAnC,EAAsC,CAAtC,CAAnB;AACP,AAAO,IAAM,aAAa,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,EAAiB,CAAjB,EAAoB,CAAC,CAArB,EAAwB,CAAxB,EAA2B,CAAC,CAA5B,EAA+B,CAA/B,EAAkC,CAAC,CAAnC,EAAsC,CAAtC,CAAnB;AACP,AAAO,IAAM,aAAa,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAC,EAAvB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,CAAnB;AACP,AAAO,IAAM,SAAS,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAAC,CAArC,CAAf;AACP,AAAO,IAAM,SAAS,IAAI,KAAJ,CAAU,CAAC,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAf;AACP,AAAO,IAAM,WAAW,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAAC,CAArC,CAAjB;AACP,AAAO,IAAM,WAAW,IAAI,KAAJ,CAAU,CAAC,CAAX,EAAc,CAAC,CAAf,EAAkB,CAAC,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAjB;;ACKP,SAAS,SAAT,CAAmB,GAAnB,EAAwB;SACf,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;QAClC,QAAQ,IAAI,KAAJ,EAAZ;UACM,gBAAN,CAAuB,MAAvB,EAA+B,YAAW;cAChC,KAAR;KADF,EAEG,KAFH;UAGM,gBAAN,CAAuB,OAAvB,EAAgC,YAAW;aAClC,IAAI,KAAJ,CAAU,mBAAV,CAAP;KADF,EAEG,KAFH;UAGM,GAAN,GAAY,GAAZ;GARK,CAAP;;;AAYF,WAAe;gBAAA;sBAAA;;kCAAA;kCAAA;kCAAA;wBAAA;wBAAA;wBAAA;gBAAA;gBAAA;oBAAA;;CAAf;;"}