{"version":3,"file":"pixel.js","sources":["../../src/process.js","../../src/utils.js","../../src/filter.js","../../src/canvas.js","../../src/const.js","../../src/main.js"],"sourcesContent":["/**\n * 求补\n * r' = 255 - r\n * g' = 255 - g\n * b' = 255 - b\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport function Complement(imageData) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        imageData[pos + i] = 255 - imageData[pos + i];\n        imageData[pos + i + 1] = 255 - imageData[pos + i + 1];\n        imageData[pos + i + 2] = 255 - imageData[pos + i + 2];\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   imageData[i] = 255 - imageData[i];\n    //   imageData[i+1] = 255 - imageData[i+1];\n    //   imageData[i+2] = 255 - imageData[i+2];\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 线性运算\n * r' = r * x + y\n * g' = g * x + y\n * b' = b * x + y\n * a' = a\n * @param {TypedArray} imageData\n * @param {Number} x\n * @param {Number} y\n * @return Promise\n */\nexport function Linear(imageData, x, y) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        imageData[pos + i] = x * imageData[pos + i] + y;\n        imageData[pos + i + 1] = x * imageData[pos + i + 1] + y;\n        imageData[pos + i + 2] = x * imageData[pos + i + 2] + y;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   imageData[i] = x * imageData[i] + y;\n    //   imageData[i+1] = x * imageData[i+1] + y;\n    //   imageData[i+2] = x * imageData[i+2] + y;\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 改变透明度\n * r' = r\n * g' = g\n * b' = b\n * a' = a * 255\n * @param {TypedArray} imageData\n * @param {Number} opacity: 0 ~ 1\n * @return Promise\n */\nexport function Opacity(imageData, opacity) {\n  var alpha = 225 * opacity;\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        imageData[pos + i + 3] = alpha;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for (let i = 0; i < imageData.length; i += 4) {\n    //   imageData[i+3] = alpha;\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 二值化\n * 先转换为灰度图\n * c' = c < threshold ? 0 : 255\n * a' = a\n * @param {TypedArray} imageData\n * @param {Number} threshold\n * @return Promise\n */\nexport function Binarization(imageData, threshold) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        var gray = 0.299 * imageData[pos + i] + 0.587 * imageData[pos + i + 1] + 0.114 * imageData[pos + i + 2];\n        imageData[pos + i] = imageData[pos + i + 1] = imageData[pos + i + 2] = gray < threshold ? 0 : 255;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   var gray = 0.299 * imageData[i] + 0.587 * imageData[i+1] + 0.114 * imageData[i+2];\n    //   imageData[i] = imageData[i+1] = imageData[i+2] = gray < threshold ? 0 : 255;\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 转换为灰度\n * r' = g' = b' = 0.299 * r + 0.587 * g + 0.114 * b\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport function Gray(imageData) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        var gray = 0.299 * imageData[pos + i] + 0.587 * imageData[pos + i + 1] + 0.114 * imageData[pos + i + 2];\n        imageData[pos + i] = imageData[pos + i + 1] = imageData[pos + i + 2] = gray;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   var gray = 0.299 * imageData[i] + 0.587 * imageData[i+1] + 0.114 * imageData[i+2];\n    //   imageData[i] = imageData[i+1] = imageData[i+2] = gray;\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * 转换为灰度\n * r' = g' = b' = ( r + g + b )/3\n * a' = a\n * @param {TypedArray} imageData\n * @return Promise\n */\nexport function Gray2(imageData) {\n  var N = 100 * 500 * 4;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(pos, len) {\n      for(let i = 0; i < len; i += 4) {\n        var gray = (imageData[pos + i] + imageData[pos + i + 1] + imageData[pos + i + 2]) / 3;\n        imageData[pos + i] = imageData[pos + i + 1] = imageData[pos + i + 2] = gray;\n      }\n      setTimeout(() => {\n        pos += len;\n        if (pos + N < imageData.length) {\n          doProcess(pos, N);\n        } else if (pos < imageData.length) {\n          doProcess(pos, imageData.length - pos);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < imageData.length; i += 4) {\n    //   var gray = (imageData[i] + imageData[i+1] + imageData[i+2]) / 3;\n    //   imageData[i] = imageData[i+1] = imageData[i+2] = gray;\n    // }\n    // resolve(imageData);\n  });\n}\n","/**\n * 卷积运算\n * @param matrix 矩阵\n * @param template 模板\n * @return result 返回矩阵和模板卷积运算的结果\n */\nexport function Convolution(matrix, template) {\n    var result = 0;\n    for (var i = 0; i < matrix.length; ++i) {\n      result += matrix[i] * template[i];\n    }\n    return result;\n}\n\n/// 辅助函数\n/**\n * 升序函数，用于数组排序\n */\nexport function AscendingOrder(a, b) {\n  return a - b;\n}\n/**\n * 降序函数，用于数组排序\n */\nexport function DescendingOrder(a, b) {\n  return b - a;\n}\n","import {\n  Convolution,\n  AscendingOrder\n} from './utils';\n\n// 卷积运算的问题：边界的像素没有相邻像素，无法构成矩阵\n// 解决：补充像素\n// 1. 用0填充\n// 2. 用第一行／列和最后一行／列补充\n// 3. 反射边界填充：column[-1] = column[1]\n// 4. 图像拼接填充：column[-1] = column[width-1]\n//\n// 这里采用第二种策略\n// 以某个像素点为中心，获取其周边像素组成一个3 x 3矩阵\nfunction get3x3Matrix(originData, i, j, w, h) {\n  var topLeft = (i - 1) * w + j - 4, top = (i - 1) * w + j, topRight = (i - 1) * w + j + 4,\n    left = i * w + j - 4, center = i * w + j, right = i * w + j + 4,\n    bottomLeft = (i + 1) * w + j - 4, bottom = (i + 1) * w + j, bottomRight = (i + 1) * w + j + 4;\n  let points = [\n    i === 0 ? (j === 0 ? center : left) : (j === 0 ? top : topLeft),\n    i === 0 ? center : top,\n    i === 0 ? (j === w - 4 ? center : right) : (j === w - 4 ? top : topRight),\n    j === 0 ? center : left,\n    center,\n    j === w - 4 ? center : right,\n    i === h - 1 ? (j === 0 ? center : left) : (j === 0 ? bottom : bottomLeft),\n    i === h - 1 ? center : bottom,\n    i === h - 1 ? (j === w - 4 ? center : right) : (j === w - 4 ? bottom : bottomRight)\n  ];\n  let dataR = [\n    originData[points[0]], originData[points[1]], originData[points[2]],\n    originData[points[3]], originData[points[4]], originData[points[5]],\n    originData[points[6]], originData[points[7]], originData[points[8]]\n  ];\n  let dataG = [\n    originData[points[0] + 1], originData[points[1] + 1], originData[points[2] + 1],\n    originData[points[3] + 1], originData[points[4] + 1], originData[points[5] + 1],\n    originData[points[6] + 1], originData[points[7] + 1], originData[points[8] + 1]\n  ];\n  let dataB = [\n    originData[points[0] + 2], originData[points[1] + 2], originData[points[2] + 2],\n    originData[points[3] + 2], originData[points[4] + 2], originData[points[5] + 2],\n    originData[points[6] + 2], originData[points[7] + 2], originData[points[8] + 2]\n  ];\n  return [dataR, dataG, dataB];\n}\n\n// 十字窗口取相邻像素的规则不是3x3，需要特殊处理\nfunction getCrossWindowMatrix(originData, i, j, w, h) {\n  let top2 = (i - 2) * w + j, top1 = (i - 1) * w + j,\n    right1 = i * w + j + 4, right2 = i * w + j + 8,\n    bottom1 = (i + 1) * w + j, bottom2 = (i + 2) * w + j,\n    left2 = i * w + j - 8, left1 = i * w + j - 4,\n    center = i * w + j;\n  let points = [\n    i < 2 ? center : top2,\n    i < 1 ? center : top1,\n    j > w - 8 ? center : right1,\n    j > w - 12 ? center : right2,\n    i > h - 2 ? center : bottom1,\n    i > h - 3 ? center : bottom2,\n    j < 1 ? center : left1,\n    j < 2 ? center : left2\n  ];\n  let dataR = [\n    originData[points[0]], originData[points[1]], originData[points[2]],\n    originData[points[3]], originData[points[4]], originData[points[5]],\n    originData[points[6]], originData[points[7]], originData[points[8]]\n  ];\n  let dataG = [\n    originData[points[0] + 1], originData[points[1] + 1], originData[points[2] + 1],\n    originData[points[3] + 1], originData[points[4] + 1], originData[points[5] + 1],\n    originData[points[6] + 1], originData[points[7] + 1], originData[points[8] + 1]\n  ];\n  let dataB = [\n    originData[points[0] + 2], originData[points[1] + 2], originData[points[2] + 2],\n    originData[points[3] + 2], originData[points[4] + 2], originData[points[5] + 2],\n    originData[points[6] + 2], originData[points[7] + 2], originData[points[8] + 2]\n  ];\n  return [dataR, dataG, dataB];\n}\n\n/**\n * Smooth Filter\n * @param {TypedArray} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function SmoothFilter(imageData, srcw, srch, template, times) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          imageData[(irow + i) * rowPixelLength + j] = Convolution(matrix3x3[0], template) / times;\n          imageData[(irow + i) * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template) / times;\n          imageData[(irow + i) * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template) / times;\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n    //     let matrix3x3 = get3x3Matrix(originData, i, j, rowPixelLength, srch);\n    //     imageData[i * rowPixelLength + j] = Convolution(matrix3x3[0], template) / times;\n    //     imageData[i * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template) / times;\n    //     imageData[i * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template) / times;\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * Median Filter : Cross Window\n * @param {TypedArray} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function CrossWindow(imageData, srcw, srch) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = getCrossWindowMatrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          dataR.sort(AscendingOrder);\n          dataG.sort(AscendingOrder);\n          dataB.sort(AscendingOrder);\n          imageData[(irow + i) * rowPixelLength + j] = dataR[4];\n          imageData[(irow + i) * rowPixelLength + j + 1] = dataG[4];\n          imageData[(irow + i) * rowPixelLength + j + 2] = dataB[4];\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n        // let matrix3x3 = getCrossWindowMatrix(originData, i, j, rowPixelLength, srch);\n        // let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n        // dataR.sort(AscendingOrder);\n        // dataG.sort(AscendingOrder);\n        // dataB.sort(AscendingOrder);\n        // imageData[i * rowPixelLength + j] = dataR[4];\n        // imageData[i * rowPixelLength + j + 1] = dataG[4];\n        // imageData[i * rowPixelLength + j + 2] = dataB[4];\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * Median Filter : Square Window\n * @param {Array} imageData\n * @param {Number} srcw\n * @param {Number} srch\n */\nexport function SquareWindow(imageData, srcw, srch) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          dataR.sort(AscendingOrder);\n          dataG.sort(AscendingOrder);\n          dataB.sort(AscendingOrder);\n          imageData[(irow + i) * rowPixelLength + j] = dataR[4];\n          imageData[(irow + i) * rowPixelLength + j + 1] = dataG[4];\n          imageData[(irow + i) * rowPixelLength + j + 2] = dataB[4];\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n    //     let matrix3x3 = get3x3Matrix(originData, i, j, rowPixelLength, srch);\n    //     let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n    //     dataR.sort(AscendingOrder);\n    //     dataG.sort(AscendingOrder);\n    //     dataB.sort(AscendingOrder);\n    //     imageData[i * rowPixelLength + j] = dataR[4];\n    //     imageData[i * rowPixelLength + j + 1] = dataG[4];\n    //     imageData[i * rowPixelLength + j + 2] = dataB[4];\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * High Pass Filter\n * @param {Array} imageData\n * @param {Number} srcw\n * @param {Number} srch\n * @param {Array} template\n */\nexport function HighPassFilter(imageData, srcw, srch, template) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          imageData[(irow + i) * rowPixelLength + j] = Convolution(matrix3x3[0], template);\n          imageData[(irow + i) * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template);\n          imageData[(irow + i) * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template);\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n    //     let matrix3x3 = get3x3Matrix(originData, i, j, rowPixelLength, srch);\n    //     imageData[i * rowPixelLength + j] = Convolution(matrix3x3[0], template);\n    //     imageData[i * rowPixelLength + j + 1] = Convolution(matrix3x3[1], template);\n    //     imageData[i * rowPixelLength + j + 2] = Convolution(matrix3x3[2], template);\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n\n/**\n * Sharpen Filter\n */\nexport function SharpenFilter(imageData, srcw, srch, templateX, templateY) {\n  var originData = imageData.slice(0);\n  var rowPixelLength = srcw * 4;\n  var N = 100;\n  return new Promise((resolve, reject) => {\n    // async way\n    function doProcess(irow, rows) {\n      for (let i = 0; i < rows; ++i) {\n        for (let j = 0; j < rowPixelLength; j += 4) {\n          let matrix3x3 = get3x3Matrix(originData, irow + i, j, rowPixelLength, srch);\n          let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n          var RTempX = Convolution(dataR, templateX);\n          var RTempY = Convolution(dataR, templateY);\n          imageData[(irow + i) * rowPixelLength + j] = Math.sqrt(Math.pow(RTempX, 2) + Math.pow(RTempY, 2));\n          var GTempX = Convolution(dataG, templateX);\n          var GTempY = Convolution(dataG, templateY);\n          imageData[(irow + i) * rowPixelLength + j + 1] = Math.sqrt(Math.pow(GTempX, 2) + Math.pow(GTempY, 2));\n          var BTempX = Convolution(dataB, templateX);\n          var BTempY = Convolution(dataB, templateY);\n          imageData[(irow + i) * rowPixelLength + j + 2] = Math.sqrt(Math.pow(BTempX, 2) + Math.pow(BTempY, 2));\n        }\n      }\n      setTimeout(() => {\n        irow += rows;\n        if (irow + N < srch) {\n          doProcess(irow, N);\n        } else if (irow < srch) {\n          doProcess(irow, srch - irow);\n        } else {\n          resolve(imageData);\n        }\n      }, 0);\n    }\n    doProcess(0, N);\n    // sync way\n    // for(let i = 0; i < srch; ++i) {\n    //   for (let j = 0; j < rowPixelLength; j += 4) {\n    //     let matrix3x3 = get3x3Matrix(originData, i, j, rowPixelLength, srch);\n    //     let dataR = matrix3x3[0], dataG = matrix3x3[1], dataB = matrix3x3[2];\n    //     var RTempX = Convolution(dataR, templateX);\n    //     var RTempY = Convolution(dataR, templateY);\n    //     imageData[i * rowPixelLength + j] = Math.sqrt(Math.pow(RTempX, 2) + Math.pow(RTempY, 2));\n    //     var GTempX = Convolution(dataG, templateX);\n    //     var GTempY = Convolution(dataG, templateY);\n    //     imageData[i * rowPixelLength + j + 1] = Math.sqrt(Math.pow(GTempX, 2) + Math.pow(GTempY, 2));\n    //     var BTempX = Convolution(dataB, templateX);\n    //     var BTempY = Convolution(dataB, templateY);\n    //     imageData[i * rowPixelLength + j + 2] = Math.sqrt(Math.pow(BTempX, 2) + Math.pow(BTempY, 2));\n    //   }\n    // }\n    // resolve(imageData);\n  });\n}\n","import {\n  Complement,\n  Linear,\n  Opacity,\n  Binarization,\n  Gray\n} from './process';\n\nimport {\n  SmoothFilter,\n  CrossWindow,\n  SquareWindow,\n  HighPassFilter,\n  SharpenFilter\n} from './filter';\n\nexport default class Canvas {\n  constructor(element, image, width, height) {\n    if (typeof element === 'string') {\n      this.cvs = document.querySelectorAll(element)[0];\n    } else {\n      this.cvs = element;\n    }\n    this.ctx = this.cvs.getContext('2d');\n    this.cvs.width = width;\n    this.cvs.height = height;\n    this.width = width;\n    this.height = height;\n    this.ctx.drawImage(image, 0, 0);\n    this.imageData = this.ctx.getImageData(0, 0, width, height);\n    this.originImageData = this.ctx.getImageData(0, 0, width, height);\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    return this;\n  }\n\n  repaint() {\n    var x = arguments[1] || 0;\n    var y = arguments[2] || 0;\n    this.ctx.putImageData(this.imageData, x, y);\n    return this;\n  }\n\n  reset() {\n    this.ctx.putImageData(this.originImageData, 0, 0);\n    this.imageData = this.ctx.getImageData(0, 0, this.width, this.height);\n    return this;\n  }\n\n  complement() {\n    return Complement(this.imageData.data);\n  }\n\n  linear(x, y) {\n    return Linear(this.imageData.data, x, y);\n  }\n\n  opacity(opacity) {\n    return Opacity(this.imageData.data, opacity);\n  }\n\n  binarization(threshold) {\n    return Binarization(this.imageData.data, threshold);\n  }\n\n  gray() {\n    return Gray(this.imageData.data);\n  }\n\n  smooth(template, times) {\n    return SmoothFilter(this.imageData.data, this.width, this.height, template, times);\n  }\n\n  crosswindow() {\n    return CrossWindow(this.imageData.data, this.width, this.height);\n  }\n\n  squareWindow() {\n    return SquareWindow(this.imageData.data, this.width, this.height);\n  }\n\n  highPassFilter(template) {\n    return HighPassFilter(this.imageData.data, this.width, this.height, template);\n  }\n\n  sharpenFilter(templateX, templateY) {\n    return SharpenFilter(this.imageData.data, this.width, this.height, templateX, templateY);\n  }\n}\n","export const TemplateSmooth1 = new Array(1, 1, 1, 1, 0, 1, 1, 1, 1);         // 平滑模板 参数 1/8\nexport const TemplateSmooth2 = new Array(1, 2, 1, 2, 4, 2, 1, 2, 1);         // 平滑模板 参数 1/16\nexport const TemplateSmooth3 = new Array(1, 1, 1, 1, 2, 1, 1, 1, 1);         // 平滑模板 参数 1/10\nexport const Laplacian0 = new Array(0, -1, 0, -1, 4, -1, 0, -1, 0);  // 拉普拉斯算子\nexport const Laplacian1 = new Array(0, -1, 0, -1, 5, -1, 0, -1, 0);  // 拉普拉斯算子\nexport const Laplacian2 = new Array(1, 4, 1, 4, -20, 4, 1, 4, 1);    // 拉普拉斯算子\nexport const SobelX = new Array(1, 0, -1, 2, 0, -2, 1, 0, -1);       // Sobel算子x\nexport const SobelY = new Array(-1, -2, -1, 0, 0, 0, 1, 2, 1);       // Sobel算子y\nexport const PrewittX = new Array(1, 0, -1, 1, 0, -1, 1, 0, -1);     // Prewitt算子x\nexport const PrewittY = new Array(-1, -1, -1, 0, 0, 0, 1, 1, 1);     // Prewitt算子y\n","import Canvas from './canvas';\nimport {\n  TemplateSmooth1,\n  TemplateSmooth2,\n  TemplateSmooth3,\n  Laplacian0,\n  Laplacian1,\n  Laplacian2,\n  SobelX,\n  SobelY,\n  PrewittX,\n  PrewittY\n} from './const';\n\nfunction loadImage(src) {\n  return new Promise((resolve, reject) => {\n    var image = new Image();\n    image.addEventListener(\"load\", function() {\n      resolve(image);\n    }, false);\n    image.addEventListener(\"error\", function() {\n      reject(new Error(\"Cannot load image\"));\n    }, false);\n    image.src = src;\n  });\n}\n\nexport default {\n  Canvas,\n  loadImage,\n  \n  TemplateSmooth1,\n  TemplateSmooth2,\n  TemplateSmooth3,\n  Laplacian0,\n  Laplacian1,\n  Laplacian2,\n  SobelX,\n  SobelY,\n  PrewittX,\n  PrewittY\n};\n"],"names":[],"mappings":"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"}